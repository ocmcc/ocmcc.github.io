<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[文物库房及藏品的智慧化管理方案]]></title>
    <url>%2F2019%2F05%2F31%2Ftest%2F</url>
    <content type="text"><![CDATA[文物库房及藏品的智慧化管理方案]]></content>
  </entry>
  <entry>
    <title><![CDATA[C语言笔记（二）]]></title>
    <url>%2F2018%2F12%2F05%2FC%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[C 程序的创建过程有四个基本步骤： 编辑； 编译； 链接； 执行。 1.编辑编辑的过程就是创建和修改 C 程序的源代码——使用 gedit 编写的程序便是源代码。在 Linux 上，最常用的文本编辑器是 Vim 编辑器。 2.编译编译器可以将源代码转换成机器语言，在编译过程中，会找出错误并报告。这个阶段的输入是在编辑期间产生的文件，常称为源文件。 编译器能找出程序中很多无效的和无法识别的错误，包括结构错误，例如程序的某个部分永远不会执行。编译器输出的结构叫作对象代码，存放它们的文件叫作对象文件。在 Linux 中这些文件的扩展名通常是 .o，在 Windows 下面这些文件的扩展名通常是 .obj 。如果编译成功就会生成一个文件，它与源文件同名。但扩展名为 .o 或者 .obj 。 gcc -o 1-1 1-1.c 这条命令既包含了编译也包含了链接，所以直接生成了可执行文件 1-1 。 在 Linux 下编译是在源代码文件所在目录输入以下命令（假如源代码文件是1-1.c）： 1gcc -c 1-1.c 这时源文件所在的目录将会生成 1-1.o 的文件。 3.链接链接器将源代码文件中由编译器产生的各种对象模块组合起来，再从 C 语言提供的程序库中添加必要的代码模块，将它们组合成一个可执行文件。链接器也可以检测和报告错误，例如程序中引用了一个根本不存在的库组件。链接一旦成功，就会生成可执行文件，在 Windows 下面可执行文件的扩展名是 .exe，在 Linux 下面，可执行文件没有扩展名，但它的文件类型是可执行的。 在编译生成 .o 文件的基础上我们将会输入以下命令（以编译生成 1-1.o 为例）： 1gcc -o 1-1 1-1.o 这时 1-1.o 所在的目录将会生成 1-1 可执行文件。 多数情况下，我们是通过 gcc -o 1-1 1-1.c 一次性完成编译和链接。 4.执行执行阶段就是成功完成了前述的三个过程后，运行程序。但是这个阶段可能会出现各种错误，包括输出错误，计算机什么也不做哦，甚至是计算机崩溃。需要返回编辑阶段，检查并修改源代码。在文件所在目录执行： 1./1-1 2.1.1 格式输出函数 printf()一般形式：printf(格式控制，输出表列)。例如：printf(&quot;%d,%d&quot;,a,b); 括号内包含两个部分： （1）“格式控制”是用双撇号括起来的一个字符串，称“转换控制字符串”，简称“格式字符串”，它包括两个信息： 格式声明：格式声明由 % 和格式字符组成，如 %d （%d 代表输出整数，%f 代表输出实数），它的作用是将输出的数据转换为指定的格式然后输出。格式声明总是由 % 字符开始。 普通字符：普通字符即在需要输出时原样输出的字符。例如上例中的 printf(&quot;Please enter a value：&quot;);中的 Please enter a value: 即为原样输出。 （2）“输出表列”是程序需要输出的数据。看下面例子： 1printf(&quot;I love %d and %d&quot;,x,s); 第一个 %d 对应的是 x 的值，第二个 %d 对应的是 s 的值。 I love 和 and （注意这里包括空格）都是普通字符会原样输出。 假如 x 的值是 3，s 的值是 4，这条语句将会输出“ I love 3 and 4 ”。 2.1.2 格式输入函数 scanf()一般形式：scanf(格式控制，地址表列)。“格式控制”的含义同 printf 函数。“地址表列”是由若干地址组成的表列，可以是变量的地址。 看下面的例子： 1scanf(&quot;a=%d,b=%d&quot;,&amp;a,&amp;b); 在格式字符串中除了有格式声明的 %d 以外，其它普通字符原样输出（如“ a= ”，“ b= ”和“，”），假如给 a 和 b 分别赋值 5 和 6 ，将显示“ a=5，b=6 ”。 注意：scanf()函数中的表列是地址表列。 scanf(&quot;a=%d,b=%d&quot;,&amp;a,&amp;b); 中 a 和 b 前面的 &amp; 不能省掉，这一点要和 printf 作区分。** printf() 函数和 scanf() 函数我们会在以后的“数据的输入与输出”版块继续讲述。 2.1.3 注释位于“ /…….. / ”中的和“ // ”后面的内容为注释，用来对程序进行说明；注释在编译时会被自动忽略。 2.2.1 整型常量：如 0 、100 、-30 等整数都是整型常量。 2.2.2 实型常量：就是我们通常所说的小数，如 12.34, -5.45, 143.342等，小数还可以用指数形式表现，如32.23e3（表示 32.2310^3）, -323.34e-6（表示 323.3410^-6）, 由于计算机无法表示上角和下角，所以规定以字母 e 或者 E 代表以 10 为底的指数。 注意：e 或者 E 之前必须有数字，且 e 或者 E 后面必须为整数，不能是 12e4.1 或者 e3 这种形式。 2.2.3 字符常量，字符常量有两种： 普通字符：用单撇号括起来的一个字符，如 ‘a’ 、’E’ 、’%’ 、’3’ 。不能写成 ‘ab’ 、’12’ 。字符常量只能是一个字符，不包括单撇号。 转义字符：除了以上形式的字符常量外，C 语言还允许用一种特殊形式的字符常量，就是以字符 \ 开头的字符序列，比如我们本节课的 3-1.c 中，\n 代表的就是换行符，显示跳转到下一行。这是一种在屏幕上无法显示的“控制字符”。 常用的控制字符： 2.3.1 什么是变量在例子 3-1 中的 a，b，c 都是变量。变量代表一个有名字的、具有特殊属性的存储单元。它可以用来保存数据。变量的值是可以改变的。变量在程序中定义的一般形式就是： &lt;类型名称&gt; &lt;变量名称&gt;。例如： int a； int b; int a,b; int price; int amount;等。 int 代表定义的变量是整数类型。 我们在 3-1.c 的例子中便是直接定义了 a，b，c 三个变量为整数类型： 1int a，b，c； 2.3.2 标识符变量需要一个名字，变量的名字便是一种“标识符”，用来区别它和其它不同的变量。用来对变量、函数、数组等命名的字符序列统称为标识符，上面提到的 price 、amount 是标识符，函数名 printf 也是一种标识符。C 语言规定标识符只能由字母、数字和下划线构成，且第一个字符必须为字母或下划线。￥qa，1ew，#22 这些都是非法的标识符。 2.3.3 变量的赋值与初始化1int price=0; 变量必须先定义后使用。这一行定义了一个变量，变量的名字是 price，类型是 int，初始的值是 0 。 注意：和数学不同，a=b 在数学中表示关系，即 a 和 b 的值一样；而在程序设计中，a=b 表示要求计算机做一个动作：将 b 的值赋值给 a 。关系是静态的，而动作是动态的。在数学中，a=b 和 b=a 是等价的，而在程序设计中，两者意思相反。]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>-计算机 -C语言 -笔记 -实验楼</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序设计入门——C语言笔记（一）]]></title>
    <url>%2F2018%2F10%2F22%2FC%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1.sublime不能运行一个有输入的程序 2.终端里 vi怎么用（苹果/linux） 3.%d 4.变量定义的一般形式： &lt;类型名称&gt;&lt;变量名称&gt;； 12345int price;int amount;int price,amount; 5.变量的名字 变量需要一个名字，变量的名字是一种“标识符”，意思是它是用来识别这个和那个的不同的名字。 标识符有标识符的构造规则。基本的原则是：标识符只能由字母、数字、和下划线组成，数字不可以出现在第一个位置上，C语言的关键字（有的地方叫保留字）不可以用做标识符。 6.对c语言来说赋值和初始化的差异不大。当赋值发生在定义变量的时候，就是变量的初始化。虽然C语言没有强制要求所有的变量都在定义的地方做初始化。但是所有的变量在第一次被使用（出现在赋值运算符的右边）之前应该被赋值一次。 1234567891011121314151617#include &lt;stdio.h&gt;int main()&#123; int i; int j; j=i+10; printf("%d\n",j); return 0;&#125; 变量初始化 &lt;类型名称&gt;&lt;变量名称&gt;=&lt;初始值&gt;； int price = 0; int amount = 100; 组合变量定义的时候，也可以在这个定义中单独给单个变量赋初值： int price = 0,amount = 100; 7.int price = 0; 这一行定义了一个变量。变量的名字是price，类型是int，初始值是0。 C是一种有类型的语言，所有的变量在使用之前必须定义或声明，所有的变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，变量中只能存放指定类型的数据，程序运行过程中也不能改变变量的类型。 8.c99和ANSI C c99允许在程序任何地方定义变量。 123456789int price = 0;printf("请输入金额（元）：");scanf("%d",&amp;price);int change = 100 - price;printf("找您%d元。\n",change); ANSI C只能在代码开头定义变量。 1234567891011int price = 0;int change = 0;printf("请输入金额（元）：");scanf("%d",$price);change = 100 -price;printf("找您%d元。\n"，change); 9.scanf 10.const是一个修饰符。加在int前面，用来给变量加上要给const（不变的）属性。这个const的属性表示这个变量的值一旦初始化，就不能再修改了。 如果试图对常量做修改，把它放在赋值运算符的左边，就会被编译器发现，指出为一个错误。(第六行错误/const的变量一般大写表示) 1234567891011121314151617181920212223#include &lt;stdio.h&gt;int main()&#123; const int AMOUNT = 100; int price = 0; AMOUNT = 90; printf("请输入金额（元）："); scanf("%d",&amp;price); int change =AMOUNT - price; printf("找您%d元。\n",change); return 0;&#125;]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>-计算机 -C语言 -笔记 -程序设计入门</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十月]]></title>
    <url>%2F2018%2F10%2F14%2F%E5%8D%81%E6%9C%88%2F</url>
    <content type="text"><![CDATA[之前想当然的一两天一更新博客还是不太现实的啊。开题报告废了很大功夫才交了上去，而且后续有非常多的坑要填。最近可能就是天天在宿舍看书、到点吃饭的节奏了…… 十月待办事项： 哈佛CS50四周的课程（当前进度：week 1） 精听8篇老托听力（当前进度：3/8） 图书馆借来的区块链的书都看完，摘出有用的部分]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Trump’s Party Makes Gains With U.S. Supreme Court]]></title>
    <url>%2F2018%2F09%2F30%2FTrump%E2%80%99s-Party-Makes-Gains-With-U-S-Supreme-Court%2F</url>
    <content type="text"><![CDATA[原文链接 The Supreme Court of the United States ended its term this month with a striking, almost dramatic finish. Supreme Court首字母大写。在英国最高法院的官网中，The Supreme Court首字母均大写。在美国最高法院官网中，the Supreme Court中the首字母小写。 It also ruled on tensions between gay rights and opponents of same-sex marriage. the second-oldest person on the high court . In the U.S., the president nominates someone to fill an open seat on the nine-member court. oppennent : one that takes an opposite position (as in a debate, contest, or conflict) same-sex ：连字符是讲两个或两个以上的单词连接起来，构成新的形容词性合成词。 Some court watchers call him the “swing voter“ because they have a hard time predicting how he will vote in cases. swing : to cause to move vigorously through a wide arc or circle affect Supreme Court decisions far into the future Then a Senate committee holds hearings on the nomination. If committee members vote to approve the nominee, the nomination goes to the full Senate. hearing : opportunity to be heard, to present one’s side of a case, or to be generally known or appreciated . And a larger, 7-2 majority ruled in the case of a Christian baker in Colorado. Kennedy added that state officials had not treated the baker’s religious objections respectfully. Supreme Court justices aim to be independent interpreters of the Constitution and not politicians. Trump himself took the unusual step of publicly releasing a list of Supreme Court candidates, most of whom were traditional jurists that many Republicans believed would uphold conservative values.” Trump任命最高法院法官的演讲： I am a man of my word. bipartisan support unanimously was born and raised in… is/are beyond dispute need badly get hold of]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>听力</tag>
        <tag>VOA Special English</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇]]></title>
    <url>%2F2018%2F09%2F23%2F%E7%AC%AC%E4%B8%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[关于搭这个博客，想了很久，又墨迹了几个月，然后这两天认真的看别人的文章和复制代码也总算搞定了。 虽然博客搭建的没有那么完善，但想起了上学期文化人类学的代课老师讲的，大概意思是说活在当下，只要做了就是好的，不用想的那么完美才开始做。 对我这么个拖延的人来说，做了，就比想着强。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
