<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F05%2F31%2F%E6%96%87%E7%89%A9%E5%BA%93%E6%88%BF%E5%8F%8A%E8%97%8F%E5%93%81%E7%9A%84%E6%99%BA%E6%85%A7%E5%8C%96%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[文物库房及藏品的智慧化管理方案 目录 摘要：… 3 第一章：库房内设施布置及管理… 3 一、柜架要求… 3 二、搬运设备及管理基础设施要求… 5 1.智能仓储及AGV解决方案… 5 2.基于PDA手持终端的仓库管理应用方案… 7 3.RFID方案在博物馆中的应用… 7 4.其他技术… 9 第二章：综合管理系统… 9 案例：苏州新导智能智慧文物管理系统… 9 国外案例：卢浮宫与IBM打造的Maximo系统… 11 SOA架构… 11 总结… 13 摘要：本方案旨在探讨物联网环境下的库房内设施及管理，并介绍基于SOA架构的综合管理系统。 关键词：智能货架；智能仓储；RFID；SOA架构；综合管理 第一章：库房内设施布置及管理藏品保管设备是＂为博物馆保护、存放、管理、运送藏品专门设置的器具＂。其主要包括柜架、保护工具与材料、搬运设备、温湿度调控设备和安保设备。科学合理的保管设备有利于充分利用库房空间，有利于安全提取和存放藏品，有利于加强藏品保护，减少自然的或人为的损坏。 一、柜架要求 存放藏品的柜架是每个藏品库房都不可或缺的一种保管工具。由于藏品类别多样，形状各异，对柜架的要求也有所不同，所以博物馆要根据该馆藏品特点购置藏品柜架。目前相关公司提供的藏品柜架方案中，柜架的材质均为钢制，封闭式的文物柜针对不同的文物内部可能会有木质囊匣。 湖南宏瑞文博集团股份有限公司智能文物柜 美国Patternson Pope公司文物储藏设施 国内外文物柜公司提供的文物柜对比 相同点 不同点 满足博物馆的一般性使用需求 国内的公司更关注文物储藏设施本身功能 针对不同的藏品进行定制 国外的公司在此基础上出售整体解决方案 总结： 经过比较发现，当下国内外对于柜架的要求还是以安全、稳定等为主要需求。国外一些公司在此基础之上，提供解决库房存储空间不足的解决方案。但本身不具有监测藏品所处环境状态的功能。 想要实时动态的监控温湿度等藏品所处微环境的状态，需要传感器以无线通信的方式，将柜内的监测数据发送到监控设备。国内有类似安徽中博智能科技有限公司等企业提供微环境智能解决方案。 也就是说当前想要实现文物柜的智能管理，需要将物联网技术和传统的文物保护设施相结合，通过无线传感器实施监控，然后将数据发送至后台加以分析。 二、搬运设备及管理基础设施要求1.智能仓储及AGV解决方案 移动修复工具车和电动叉车 当前博物馆常用移动修复工具车和电动叉车，整体效率一般。如果想要完成仓储搬运的自动化与智能化，可以借鉴当下物流行业的经验。 目前物流行业关于商品的拣选主要采用“货到人”的方式，即货动人不动。 优点： 保管员只需在操作台便可完成货物拣选、上下架及其他仓储工作，减少了大量行走时间和劳动强度，保证了仓储业务的安全性、准确性和时效性。该方案同时降低了对工作人员的能力要求。 缺陷： 没有实践证明当下的智能仓储能够针对博物馆中种类繁多的文物能够安全稳定的运行。 当下智能存储方面的主流方案 名称 原理 存储能力 投资情况（元/立方米存储空间） 存储高度 多层穿梭车方案 穿梭车在货架中运行，支持每层一台或者几层公佣一台穿梭车，实现存储容器的取放，配合提升机、输送线和拣选工作站最终实现货到人 取决于货架的设计尺寸 约20000~25000 &gt;20米 Autostore方案 在货架顶部，依据吞吐量配置一定数量的专用拣选车，配合拣选工作站最终实现货到人 约15000~20000 &lt;10米 Miniload方案 Miniload堆垛机在巷道中运行，实现存储容器的取放，配合输送线和拣选工作站最终实现货到人 约8000~10000 &gt;20米 旋转货架方案 通过将货架单元整体或者每层进行旋转，实现存储容器的取放，配合提升机，拣选工作站最终实现货到人 约8000~15000 &lt;8米 类Kiva方案 通过对货架的小型化和独立化，使用二维码导航AGV小车，将被拣选货架搬运至拣选工人旁 取决于货架数量 约2500~3750 &lt;3米 目前，类似亚马逊的Kiva方案应用比较多，采用AGV（自动导引运输车）来将货架整体搬运到操作台，然后由操作员上、下架相应物品。 优势： AGV具有并行作业、自动化、智能化和柔性化的特性，很好的满足博物馆库房的日常工作，可以实现排架智能化，减轻库房的工作人员的工作量； AGV的负载量（50kg到60000kg）能满足博物馆库房的作业场景。 缺陷： ​ 相较于博物馆库房的工作量，使用成本高； 没有足够的实践表明AGV足够稳定可以保障文物的安全。 总结： 当下关于智能仓储方案仍然尚未成熟，针对具体使用环境仍有许多实际的问题。另外基础设施建设和迭代的成本也是需要考虑。 2.基于PDA手持终端的仓库管理应用方案相较于不成熟的智能仓储解决方案，基于PDA手持终端的仓库管理应用方案的实行显得相对容易。通过PDA手持终端读取条码，仓库人员可轻松实现日常的入库、出库、盘点等货品管理，将极大的提高仓储流动过程中数据的准确性及时效性，实现高效信息化的智慧仓库管理。 （1）入库操作 藏品送到仓库，收货人员采用手持采集终端对藏品条码进行逐一扫描，可以快速、准确无误完成相关信息的采集，实时把信息传回藏品管理系统。 （2）出库操作 库房工作人员在指定的货位进行取出藏品，出货时仓库人员使用PDA手持终端扫描条码，跟出库单号进行对应，如果数据相符，信息会显示在屏幕上，同时系统自动记录出库的货物信息，完成出库操作。 （3）盘点 仓库工作人员通过系统查询PDA手持终端可以清楚知道藏品库房存量，藏品放置的位置以及藏品状态。根据数据库显示的藏品数量，通过PDA手持终端盘点实际藏品是否与数据库内的数据一致。 总结：PDA方案能否顺利实施的核心在于RFID方案是否适用于博物馆藏品库房管理。 3.RFID方案在博物馆中的应用无线射频识别技术（RFID），是一种非接触式的自动识别技术，它通过射频信号的空间耦合实现无接触信息传递，并通过所传递的信息达到识别目的。即通过无线射频方式进行非接触双向数据通信，对目标加识别。一个典型的RFID系统一般由电子标签（Tag）、读写器（Reader）及后台系统等部分组成。 通过采用先进的 RFID 技术，实现对博物馆藏品的高效管理。基于射频技术的 RFID 藏品管理系统将射频技术、条码技术、无线网络技术相结合，集成了统一的软硬件平台，从根本上保证了实际操作，流通状态和后台数据库三方面随时随地准确统一，实现藏品（物）、保管人员（人）和藏品相关操作（事件）的有机统一，同时进一步提高工作效率，真正实现藏品的科学化、数字化、智慧化管理。该系统在博物馆藏品管理及相关领域有着广泛的应用前景，具有很高的推广价值。 ​ 上图为RFID仓库管理系统的使用方案，RFID方案旨在对藏品的唯一性进行标识，然后加以监测管理。而且随着最新无源无线传感+识别芯片设计为核心技术的出现（浙江悦和科技有限公司）。可以预期在未来无线传感器和RFID标签结合的技术成熟之后，博物馆可以精确到对单个藏品的微环境加以监测，实现更为理想的藏品管理。因此对于RFID的技术发展要一直保持关注。 RFID**电子标签的优缺点** 优势 缺陷 读取方便快捷：数据的读取无需光源，具有穿透性识别的功能。采用自带电池的主动标签时，有效识别距离可达到几十米。 有源式标签的电池可能会对藏品所处环境造成不利影响。 识别速度快：标签一进入磁场，解读器就可以即时读取其中的信息，而且能够同时实现批量识别。 RFID技术的实施成本很高。 数据容量大：RFID存储量可根据用户的需要扩充到数百Ｋ甚至可达数Ｍ，为实现一物一码提供了可能 博物馆的藏品众多，工作量之大是RFID技术应用中的难题。 使用寿命长：RFID对水、油和药品等物质有强力的抗污性。 在安全和技术方面，RFID技术还不尽完善，并且在不同种类的藏品上安装RFID标签有很大的困难。 标签数据动态可更改：利用编程器可以写入数据，从而赋予RFID标签交互式便携数据文件的功能。可以反复被覆盖重写，因此可以回收标签重复使用。 更好的安全性：不仅可以嵌入或附着在不同形状、类型的产品上，而且可为标签数据的读写设置密码保护，通过校验或循环冗余校验的方法来保证射频标签中存储的数据的准确性，从而具有更高的安全性。 动态实时通信：标签以每秒50至100次的频率与解读器进行通信，所以只要RFID签所附着的物体出现在解读器的有效识别范围内，就可以对其位置进行动态的追踪和监控。 目前大多博物馆都对RFID电子标签在博物馆中的应用加以调研和论证，却少有大面积使用。主要的问题还是集中在RFID电子标签不能安全稳定的附着在许多种类文物上，实现真正的对藏品的唯一性的标识。在这一问题没有彻底解决前，博物馆是不会大面积使用RFID方案。 但是从上图可见，相比RFID应用的缺陷，RFID技术的优势更为明显，随着未来这一技术的发展，应用的可能性会更高。 总结： 综上所述，在博物馆藏品管理中应用RFID技术，只能采取整体规划、分步实施的办法，不可能一蹴而就。可以考虑从在陶瓷、玉器、金银器、铜器等较大型、易操作的器物类藏品中首先应用RFID电子标签，待时机成熟，再逐步推广到其他类藏品。 分布实施虽然可以降低成本、增强可实施性，但是博物馆将会面临RFID藏品和非RFID藏品同时并存的情况，并且这种过渡情况将长期存在。这就是必须在技术上确保RFID藏品和非RFID藏品能够在长期混合管理和流通，并且在分步实施的过程中保证技术兼容、标准统一。 4.其他技术除了RFID电子标签外，还有学者介绍Data Matrix标签，这类二维码标签更多的是完成博物馆信息的数字化，不具备“物联”的功能和相关的潜力。在博物馆库房的智慧管理的应用中作用有限。 第二章：综合管理系统国内案例：苏州新导智能智慧文物管理系统 苏州新导智能智慧文物管理系统的核心仍然是通过RFID技术来对库房藏品全流程进行记录来实现藏品动态的可视化，当前许多藏品管理方案的都是基于RFID方案的实现才能付诸实施。关于RFID方案的讨论见第一章。 国内案例：广东省博物馆数字管理系统“广东省博物馆综合应用与服务平台”是由广东省博物馆自主建设的全业务管理与应用平台。该平台在对广东省博物馆的各项业务及其相互之间的关联，以及对藏品（物）、观众（人）、业务（事）等各类数字资源与数据进行梳理与整合的基础上，对博物馆信息化系统进行了科学、完整的顶层设计与应用规划，并以大数据、云计算、移动互联网、空间信息等技术为手段，高度集成了所有的应用系统、数据资源以及基础软硬件，构建了统一的综合应用与服务管理体系。 了解业务需求 构建业务框架 \1. 藏品平台 上图：业务分布 下图：工作页面 2.数字资源中心 上图：业务分布 下图：工作页面 3.审核中心 上图：业务分布 下图：工作页面 4.权限中心 上图：业务分布 下图：工作页面 5.项目管理 上图：业务分布 下图：工作页面 6.观众中心 上图：业务分布 下图：工作页面 总结：广东省博物馆的综合管理系统从功能和设计上来看都可以满足当前博物馆的业务需要，所不了解的在于其具体工作中的使用效果如何。 国外案例：卢浮宫与IBM打造的Maximo系统 卢浮宫在2011年接待的观众达880万人次。为了保证大部分展厅能够每天对外开放，博物馆意识到他们需要一个计算机化的维修管理工具，以便提高维修与预防措施等方面的管理效率。 通过使用IBM研发的Maximo资产管理软件，仅仅通过一个数据库就能够监控博物馆所有设施的情况，使以前相互分离的系统进行“对话”，员工能够更加轻松自如和高效地维护藏品和设施。”不仅改进了博物馆的运营和管理机制，提高了博物馆员工的工作效率，而且提升了观众服务的质量。 博物馆还邀请SQLI（IBM的商务合作伙伴）来协助升级IBM的Maximo软件，创建一个一体化的信息数据库，方便了博物馆员工内部信息共享。这一软件可以提供各种问题的解决方案，而且还使供暖、电梯、灯光、门锁等系统的初始化、清洗、维修、处理等过程可视化。另外，该软件还能预测设施、设备和系统的性能和可靠性，使博物馆员工能够更好地了解哪些设施需要维修、哪些需要更换。 总结： 综合国内和国外的案例来看，博物馆有必要建设一个综合管理平台，通过其中不同的业务模块来负责不同的业务，并且不同业务模块要能够做到资源共享和对接。与此同时，平台系统的迭代性也要好，可以针对业务需求的改变而变更。 基于B/S体系、SOA架构的综合管理平台可以很好的实现博物馆日常管理可视化、信息资源网络化、综合保障精细化，满足博物馆日常运行以及业务需求。目前提供SOA全套解决方案和产品的厂商很多，包括IBM SAP和Oracle，国内金蝶用友浪潮软件等等 SOA架构SOA即面向服务的体系结构（service-oriented architecture），它是一种组件模型，允许不同的服务模块通过良好的契约和接口联系起来，实现分布式的要服务调用。 优点： （1） 松耦合：之前的所有操作集成于某个功能模块，包括数据操作、逻辑处理等等。当项目一旦大起来，可能一次操作要操作多个功能模块，那么这种嵌套关系就变得很复杂，导致相互依赖，那么之前所有的东西修改起来都会影响到其它业务的执行，这样维护起来变得相当困难。 而松耦合恰好就是解决这种依赖关系，通过接口访问数据信息。不允许直接访问其它服务的数据，防止破坏了封装性，造成了一种内部依赖。当服务的内部状态发生改变，不会对其他部分造成影响。 （2） 易上手 （3） 可复用（DRY原则 Don’t Repeat Yourself） （4） 组件化：SOA架构是面向服务的架构设计，它通过封装一个服务，所有的操作数据功能，都只能用给定的接口使用。当需要扩展一个功能时，如果已存在相应接口，那么只需要调取相应的接口即可。 （5） 跨平台 SOA架构的松耦合、无状态、可重用等特点非常适合于云端服务的整合，SOA架构有助于搭建云端环境，把单一功能的云端服务组合成可以满足特殊功能的复杂应用。 云计算是基于当前互联网的超大规模计算模式，它采用了分布式的并行计算技术，使得传统计算的计算模式摆脱了物理实体结构的限制。云计算具有可用性高，虚拟化、性价比高、通用性好、定制灵活、可扩展性强等优点 传统的 SOA 架构：在传统的业务层和技术层之间增加一个服务层，通过一套协议或规范，服务层把应用程序从底层技术层调出来，加以封装，再根据业务层需求灵活组合。服务层不依附于任何特定技术平台，能够在技术层和业务层之间沟通、组合，业务应用系统就变成了“松耦合结构”，需要什么功能就装配什么功能，想用什么功能就调用什么功能，改动调整非常方便。而且这些构建在各种各样系统中的“服务”可以以一种统一和通用方式进行交互。保证系统灵活性，另外，还可以保证“服务”的重复利用。 基于云计算技术的 SOA 架构：在传统 SOA 架构的基础之上，引进了云计算技术，这里主要体现的是 PAAS 技术。通过实现一个PAAS平台，可以实现基础环境的自动部署，如Java环境，J2EE容器等。具体到业务，可以是供应链系统，流程管理平台等。使用云平台，利用云平台的 PAAS技术，SOA总线接口环境可以打包到自动部署中。 智慧博物馆管理系统技术架构 总结当下想要打造博物馆的智慧管理系统仍然存在诸多实际使用问题，许多技术没有在博物馆的场景内具体应用过，其实用性、安全性、稳定性仍然值得检验。 从硬件来看，对博物馆进行智慧化改造需要通过物联网技术加以解决，目前问题在于，对于藏品的唯一标识的问题没有技术能够完美的解决，另外博物馆要采用稳定、成熟而先进的技术，因此技术的迭代成本博物馆也要一并考虑进去。 ​ 从智慧博物馆的角度来看，基于SOA的综合管理系统是基础性平台，所有的其他相关线上业务都基于此展开，因此建设的重要性和迫切性排在首要位置；关于藏品库房的智能管理，当下的文物库房经过多年实践的检验，虽存在一些问题，但运行的稳定性和藏品工作人员对仓库和藏品的熟悉程度都达到了一个很高的水平，因此改造并的需求不十分迫切；而对于藏品信息和状态的智慧化监控管理，即做到动态和全流程的掌控藏品信息和状态，则十分必要。一方面可以预防性的对藏品进行保护，延长藏品的寿命；另一方面可以更好的利用藏品的信息开展保护、展览、教育等博物馆业务工作，并且藏品信息的明确也为未来解决博物馆藏品数字化版权的问题奠定基础。]]></content>
  </entry>
  <entry>
    <title><![CDATA[C语言笔记（二）]]></title>
    <url>%2F2018%2F12%2F05%2FC%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[C 程序的创建过程有四个基本步骤： 编辑； 编译； 链接； 执行。 1.编辑编辑的过程就是创建和修改 C 程序的源代码——使用 gedit 编写的程序便是源代码。在 Linux 上，最常用的文本编辑器是 Vim 编辑器。 2.编译编译器可以将源代码转换成机器语言，在编译过程中，会找出错误并报告。这个阶段的输入是在编辑期间产生的文件，常称为源文件。 编译器能找出程序中很多无效的和无法识别的错误，包括结构错误，例如程序的某个部分永远不会执行。编译器输出的结构叫作对象代码，存放它们的文件叫作对象文件。在 Linux 中这些文件的扩展名通常是 .o，在 Windows 下面这些文件的扩展名通常是 .obj 。如果编译成功就会生成一个文件，它与源文件同名。但扩展名为 .o 或者 .obj 。 gcc -o 1-1 1-1.c 这条命令既包含了编译也包含了链接，所以直接生成了可执行文件 1-1 。 在 Linux 下编译是在源代码文件所在目录输入以下命令（假如源代码文件是1-1.c）： 1gcc -c 1-1.c 这时源文件所在的目录将会生成 1-1.o 的文件。 3.链接链接器将源代码文件中由编译器产生的各种对象模块组合起来，再从 C 语言提供的程序库中添加必要的代码模块，将它们组合成一个可执行文件。链接器也可以检测和报告错误，例如程序中引用了一个根本不存在的库组件。链接一旦成功，就会生成可执行文件，在 Windows 下面可执行文件的扩展名是 .exe，在 Linux 下面，可执行文件没有扩展名，但它的文件类型是可执行的。 在编译生成 .o 文件的基础上我们将会输入以下命令（以编译生成 1-1.o 为例）： 1gcc -o 1-1 1-1.o 这时 1-1.o 所在的目录将会生成 1-1 可执行文件。 多数情况下，我们是通过 gcc -o 1-1 1-1.c 一次性完成编译和链接。 4.执行执行阶段就是成功完成了前述的三个过程后，运行程序。但是这个阶段可能会出现各种错误，包括输出错误，计算机什么也不做哦，甚至是计算机崩溃。需要返回编辑阶段，检查并修改源代码。在文件所在目录执行： 1./1-1 2.1.1 格式输出函数 printf()一般形式：printf(格式控制，输出表列)。例如：printf(&quot;%d,%d&quot;,a,b); 括号内包含两个部分： （1）“格式控制”是用双撇号括起来的一个字符串，称“转换控制字符串”，简称“格式字符串”，它包括两个信息： 格式声明：格式声明由 % 和格式字符组成，如 %d （%d 代表输出整数，%f 代表输出实数），它的作用是将输出的数据转换为指定的格式然后输出。格式声明总是由 % 字符开始。 普通字符：普通字符即在需要输出时原样输出的字符。例如上例中的 printf(&quot;Please enter a value：&quot;);中的 Please enter a value: 即为原样输出。 （2）“输出表列”是程序需要输出的数据。看下面例子： 1printf(&quot;I love %d and %d&quot;,x,s); 第一个 %d 对应的是 x 的值，第二个 %d 对应的是 s 的值。 I love 和 and （注意这里包括空格）都是普通字符会原样输出。 假如 x 的值是 3，s 的值是 4，这条语句将会输出“ I love 3 and 4 ”。 2.1.2 格式输入函数 scanf()一般形式：scanf(格式控制，地址表列)。“格式控制”的含义同 printf 函数。“地址表列”是由若干地址组成的表列，可以是变量的地址。 看下面的例子： 1scanf(&quot;a=%d,b=%d&quot;,&amp;a,&amp;b); 在格式字符串中除了有格式声明的 %d 以外，其它普通字符原样输出（如“ a= ”，“ b= ”和“，”），假如给 a 和 b 分别赋值 5 和 6 ，将显示“ a=5，b=6 ”。 注意：scanf()函数中的表列是地址表列。 scanf(&quot;a=%d,b=%d&quot;,&amp;a,&amp;b); 中 a 和 b 前面的 &amp; 不能省掉，这一点要和 printf 作区分。** printf() 函数和 scanf() 函数我们会在以后的“数据的输入与输出”版块继续讲述。 2.1.3 注释位于“ /…….. / ”中的和“ // ”后面的内容为注释，用来对程序进行说明；注释在编译时会被自动忽略。 2.2.1 整型常量：如 0 、100 、-30 等整数都是整型常量。 2.2.2 实型常量：就是我们通常所说的小数，如 12.34, -5.45, 143.342等，小数还可以用指数形式表现，如32.23e3（表示 32.2310^3）, -323.34e-6（表示 323.3410^-6）, 由于计算机无法表示上角和下角，所以规定以字母 e 或者 E 代表以 10 为底的指数。 注意：e 或者 E 之前必须有数字，且 e 或者 E 后面必须为整数，不能是 12e4.1 或者 e3 这种形式。 2.2.3 字符常量，字符常量有两种： 普通字符：用单撇号括起来的一个字符，如 ‘a’ 、’E’ 、’%’ 、’3’ 。不能写成 ‘ab’ 、’12’ 。字符常量只能是一个字符，不包括单撇号。 转义字符：除了以上形式的字符常量外，C 语言还允许用一种特殊形式的字符常量，就是以字符 \ 开头的字符序列，比如我们本节课的 3-1.c 中，\n 代表的就是换行符，显示跳转到下一行。这是一种在屏幕上无法显示的“控制字符”。 常用的控制字符： 2.3.1 什么是变量在例子 3-1 中的 a，b，c 都是变量。变量代表一个有名字的、具有特殊属性的存储单元。它可以用来保存数据。变量的值是可以改变的。变量在程序中定义的一般形式就是： &lt;类型名称&gt; &lt;变量名称&gt;。例如： int a； int b; int a,b; int price; int amount;等。 int 代表定义的变量是整数类型。 我们在 3-1.c 的例子中便是直接定义了 a，b，c 三个变量为整数类型： 1int a，b，c； 2.3.2 标识符变量需要一个名字，变量的名字便是一种“标识符”，用来区别它和其它不同的变量。用来对变量、函数、数组等命名的字符序列统称为标识符，上面提到的 price 、amount 是标识符，函数名 printf 也是一种标识符。C 语言规定标识符只能由字母、数字和下划线构成，且第一个字符必须为字母或下划线。￥qa，1ew，#22 这些都是非法的标识符。 2.3.3 变量的赋值与初始化1int price=0; 变量必须先定义后使用。这一行定义了一个变量，变量的名字是 price，类型是 int，初始的值是 0 。 注意：和数学不同，a=b 在数学中表示关系，即 a 和 b 的值一样；而在程序设计中，a=b 表示要求计算机做一个动作：将 b 的值赋值给 a 。关系是静态的，而动作是动态的。在数学中，a=b 和 b=a 是等价的，而在程序设计中，两者意思相反。]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>-计算机 -C语言 -笔记 -实验楼</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序设计入门——C语言笔记（一）]]></title>
    <url>%2F2018%2F10%2F22%2FC%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[1.sublime不能运行一个有输入的程序 2.终端里 vi怎么用（苹果/linux） 3.%d 4.变量定义的一般形式： &lt;类型名称&gt;&lt;变量名称&gt;； 12345int price;int amount;int price,amount; 5.变量的名字 变量需要一个名字，变量的名字是一种“标识符”，意思是它是用来识别这个和那个的不同的名字。 标识符有标识符的构造规则。基本的原则是：标识符只能由字母、数字、和下划线组成，数字不可以出现在第一个位置上，C语言的关键字（有的地方叫保留字）不可以用做标识符。 6.对c语言来说赋值和初始化的差异不大。当赋值发生在定义变量的时候，就是变量的初始化。虽然C语言没有强制要求所有的变量都在定义的地方做初始化。但是所有的变量在第一次被使用（出现在赋值运算符的右边）之前应该被赋值一次。 1234567891011121314151617#include &lt;stdio.h&gt;int main()&#123; int i; int j; j=i+10; printf("%d\n",j); return 0;&#125; 变量初始化 &lt;类型名称&gt;&lt;变量名称&gt;=&lt;初始值&gt;； int price = 0; int amount = 100; 组合变量定义的时候，也可以在这个定义中单独给单个变量赋初值： int price = 0,amount = 100; 7.int price = 0; 这一行定义了一个变量。变量的名字是price，类型是int，初始值是0。 C是一种有类型的语言，所有的变量在使用之前必须定义或声明，所有的变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，变量中只能存放指定类型的数据，程序运行过程中也不能改变变量的类型。 8.c99和ANSI C c99允许在程序任何地方定义变量。 123456789int price = 0;printf("请输入金额（元）：");scanf("%d",&amp;price);int change = 100 - price;printf("找您%d元。\n",change); ANSI C只能在代码开头定义变量。 1234567891011int price = 0;int change = 0;printf("请输入金额（元）：");scanf("%d",$price);change = 100 -price;printf("找您%d元。\n"，change); 9.scanf 10.const是一个修饰符。加在int前面，用来给变量加上要给const（不变的）属性。这个const的属性表示这个变量的值一旦初始化，就不能再修改了。 如果试图对常量做修改，把它放在赋值运算符的左边，就会被编译器发现，指出为一个错误。(第六行错误/const的变量一般大写表示) 1234567891011121314151617181920212223#include &lt;stdio.h&gt;int main()&#123; const int AMOUNT = 100; int price = 0; AMOUNT = 90; printf("请输入金额（元）："); scanf("%d",&amp;price); int change =AMOUNT - price; printf("找您%d元。\n",change); return 0;&#125;]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>-计算机 -C语言 -笔记 -程序设计入门</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十月]]></title>
    <url>%2F2018%2F10%2F14%2F%E5%8D%81%E6%9C%88%2F</url>
    <content type="text"><![CDATA[之前想当然的一两天一更新博客还是不太现实的啊。开题报告废了很大功夫才交了上去，而且后续有非常多的坑要填。最近可能就是天天在宿舍看书、到点吃饭的节奏了…… 十月待办事项： 哈佛CS50四周的课程（当前进度：week 1） 精听8篇老托听力（当前进度：3/8） 图书馆借来的区块链的书都看完，摘出有用的部分]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Trump’s Party Makes Gains With U.S. Supreme Court]]></title>
    <url>%2F2018%2F09%2F30%2FTrump%E2%80%99s-Party-Makes-Gains-With-U-S-Supreme-Court%2F</url>
    <content type="text"><![CDATA[原文链接 The Supreme Court of the United States ended its term this month with a striking, almost dramatic finish. Supreme Court首字母大写。在英国最高法院的官网中，The Supreme Court首字母均大写。在美国最高法院官网中，the Supreme Court中the首字母小写。 It also ruled on tensions between gay rights and opponents of same-sex marriage. the second-oldest person on the high court . In the U.S., the president nominates someone to fill an open seat on the nine-member court. oppennent : one that takes an opposite position (as in a debate, contest, or conflict) same-sex ：连字符是讲两个或两个以上的单词连接起来，构成新的形容词性合成词。 Some court watchers call him the “swing voter“ because they have a hard time predicting how he will vote in cases. swing : to cause to move vigorously through a wide arc or circle affect Supreme Court decisions far into the future Then a Senate committee holds hearings on the nomination. If committee members vote to approve the nominee, the nomination goes to the full Senate. hearing : opportunity to be heard, to present one’s side of a case, or to be generally known or appreciated . And a larger, 7-2 majority ruled in the case of a Christian baker in Colorado. Kennedy added that state officials had not treated the baker’s religious objections respectfully. Supreme Court justices aim to be independent interpreters of the Constitution and not politicians. Trump himself took the unusual step of publicly releasing a list of Supreme Court candidates, most of whom were traditional jurists that many Republicans believed would uphold conservative values.” Trump任命最高法院法官的演讲： I am a man of my word. bipartisan support unanimously was born and raised in… is/are beyond dispute need badly get hold of]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>听力</tag>
        <tag>VOA Special English</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇]]></title>
    <url>%2F2018%2F09%2F23%2F%E7%AC%AC%E4%B8%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[关于搭这个博客，想了很久，又墨迹了几个月，然后这两天认真的看别人的文章和复制代码也总算搞定了。 虽然博客搭建的没有那么完善，但想起了上学期文化人类学的代课老师讲的，大概意思是说活在当下，只要做了就是好的，不用想的那么完美才开始做。 对我这么个拖延的人来说，做了，就比想着强。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
